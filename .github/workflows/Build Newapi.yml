name: Build new-api Docker image

on:
  repository_dispatch:
    types: [new-api-update]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from new-api repo'
        required: true
        default: 'main'
      tag:
        description: 'Tag to build (leave empty for latest)'
        required: false

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the Work repo
        uses: actions/checkout@v3

      - name: Check out the new-api repo
        uses: actions/checkout@v3
        with:
          repository: fengzaixing401/new-api
          path: new-api
          ref: ${{ github.event.client_payload.ref || github.event.inputs.branch || 'main' }}
          fetch-depth: 0
          token: ${{ secrets.WEBHOOK_PAT }}

      - name: Save version info
        working-directory: new-api
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            git checkout ${{ github.event.inputs.tag }}
          fi
          git describe --tags 2>/dev/null | tee VERSION || echo "1.0.0" > VERSION

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            fzx401/new-api
            ghcr.io/fengzaixing401/new-api

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: new-api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
