name: 检查 Newapi 更新并触发构建

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: 检出 fzx new-api 仓库
        uses: actions/checkout@v3
        with:
          repository: fengzaixing401/new-api
          token: ${{ secrets.REPO_PAT }}
          fetch-depth: 0

      - name: 配置 Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: 检查上游更新并同步
        id: check_updates
        run: |
          git remote add upstream https://github.com/Calcium-Ion/new-api.git
          git fetch upstream --tags
          
          # 检查是否有新的提交
          if git diff --quiet HEAD upstream/main; then
            echo "代码没有更新"
            HAS_CODE_UPDATES=false
          else
            echo "发现代码更新，正在同步"
            git merge upstream/main
            git push
            HAS_CODE_UPDATES=true
          fi
          
          # 检查是否有新的标签
          LOCAL_TAGS=$(git tag -l)
          REMOTE_TAGS=$(git ls-remote --tags --refs upstream | cut -f2 | sed 's/refs\/tags\///')
          NEW_TAGS=$(comm -13 <(echo "$LOCAL_TAGS" | sort) <(echo "$REMOTE_TAGS" | sort))
          
          if [ -n "$NEW_TAGS" ]; then
            echo "发现新标签，正在同步"
            echo "$NEW_TAGS" | while read -r tag; do
              git fetch upstream refs/tags/$tag:refs/tags/$tag
              git push origin refs/tags/$tag
            done
            HAS_TAG_UPDATES=true
          else
            echo "没有新的标签"
            HAS_TAG_UPDATES=false
          fi
          
          # 获取最新的标签
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          
          # 设置输出
          echo "has_code_updates=$HAS_CODE_UPDATES" >> $GITHUB_OUTPUT
          echo "has_tag_updates=$HAS_TAG_UPDATES" >> $GITHUB_OUTPUT
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: 触发 Build Newapi 工作流
        if: steps.check_updates.outputs.has_code_updates == 'true' || steps.check_updates.outputs.has_tag_updates == 'true'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.REPO_PAT }}" \
            https://api.github.com/repos/fengzaixing401/work/actions/workflows/Build%20Newapi.yml/dispatches \
            -d '{"ref":"main"}'
